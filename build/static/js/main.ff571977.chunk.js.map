{"version":3,"sources":["components/AlertMessage.js","contexts/NotificationContext.js","contexts/GlobalContext.js","contexts/AuthContext.js","api/firebase.js","api/index.js","hooks/useGlobal.js","hooks/useAuth.js","hooks/useNotification.js","hooks/useForm.js","pages/Register.js","types/types.js","pages/Login.js","components/Header.js","UITemplate.js","components/AlertDialog.js","components/ModalForm.js","pages/EditCard.js","pages/CardItem.js","pages/CardsGrid.js","components/Icon.js","pages/AddCard.js","components/Loader.js","redux/types/actionTypes.js","redux/actions/searchAction.js","components/SearchBar.js","pages/Home.js","pages/AddStepModal.js","pages/TestTemplateForm.js","router/DashboardRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","App.js","auth/authReducer.js","store/index.js","redux/reducers/searchReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Alert","props","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","AlertMessage","isOpen","severity","message","handleClose","classes","className","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","NotificationContext","createContext","NotificationProvider","children","useState","state","setState","Provider","value","GlobalContext","AuthContext","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","taskCollection","userCollection","taskServices","findByName","query","collection","orderBy","where","get","findAll","save","tarea","add","edit","doc","id","update","remove","delete","userServices","saveUser","newUser","findUser","emailAddress","password","useGlobal","useContext","useAuth","useNotification","useForm","initialState","values","setValues","reset","handleInputChange","target","name","formSchema","object","shape","firstName","string","matches","required","lastName","email","paper","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Register","alert","history","useHistory","mode","resolver","yupResolver","defaultValues","register","handleSubmit","errors","Container","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","then","data","replace","error","Grid","container","item","xs","sm","TextField","inputRef","fullWidth","label","helperText","type","Button","color","Login","dispatch","empty","forEach","payload","JSON","stringify","FormControlLabel","control","Checkbox","Link","href","to","RouterLink","Box","mt","Copyright","align","Date","getFullYear","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","Header","auth","anchorEl","setAnchorEl","user","AppBar","position","Toolbar","noWrap","aria-controls","aria-haspopup","onClick","event","currentTarget","endIcon","Menu","keepMounted","Boolean","MenuItem","formControl","minWidth","icon","marginRight","heroContent","background","padding","heroButtons","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","controlRight","expand","marginLeft","cardContent","info","dark","getContrastText","cardContentInprogress","warning","cardContentDone","success","footer","deleteButton","successButton","light","blueButton","warningButton","AlertDialog","handleYes","handleNo","title","content","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","marginBottom","withStyles","closeButton","right","top","grey","other","disableTypography","IconButton","aria-label","MuiDialogContent","MuiDialogActions","ModalForm","loading","buttonLabel","noValidate","preventDefault","stopPropagation","dividers","disabled","initTarea","status","EditCard","tareaEdit","setTareas","glbState","statuses","taskStatuses","setTarea","useEffect","tareasList","map","console","log","onChange","InputLabel","Select","labelId","CardItem","tareas","tareId","setTareaId","openConfirm","setOpenConfirm","showEdit","setShowEdit","selected","setSelected","CardContent","gutterBottom","Chip","find","CardActions","Tooltip","openEditModal","filter","CardsGrid","md","Card","defaultProps","Icon","AddCard","openModal","setOpenModal","justify","size","trim","length","prototype","PropTypes","func","isRequired","Loader","CircularProgress","disableShrink","types","searchTasks","searchTerm","fetchTasks","arrayData","docs","tasks","withoutLabel","SearchBar","prop","useDispatch","_loading","useSelector","search","FormControl","htmlFor","OutlinedInput","endAdornment","InputAdornment","onMouseDown","edge","labelWidth","Home","stepNumber","number","action","requiredData","expectedResult","AddStepModal","setSteps","steps","setValue","step","items","formContent","scopes","testCaseId","description","TestTemplateForm","selectedDate","setSelectedDate","handleDateChange","date","render","select","defaultValue","rules","utils","DateFnsUtils","views","format","KeyboardButtonProps","placeholder","multiline","TableContainer","Paper","Table","sx","TableHead","TableRow","TableCell","elemento","DashboardRouter","exact","path","PrivateRoute","isAuthenticated","Component","rest","PublicRoute","AppRouter","logged","App","createMuiTheme","primary","ThemeProvider","authReducer","INITIAL_GLOBAL_STATE","initReducer","parse","localStorage","getItem","Store","setGlbState","useReducer","setItem","searchReducer","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reduxStore","createStore","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.ff571977.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AlertMessage({\r\n  isOpen,\r\n  severity,\r\n  message,\r\n  handleClose,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        open={isOpen}\r\n        autoHideDuration={1500}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\n\r\nconst NotificationContext = createContext(null);\r\n\r\nfunction NotificationProvider({ children }) {\r\n  const [state, setState] = useState(null);\r\n\r\n  const onClose = () => {\r\n    setState({ ...state, isOpen: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NotificationContext.Provider value={setState}>\r\n        {children}\r\n      </NotificationContext.Provider>\r\n      <AlertMessage handleClose={onClose} {...state} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { NotificationContext, NotificationProvider };\r\n","import { createContext } from \"react\";\r\n\r\nexport const GlobalContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA3X1diBFZPzZZpEs8zaJLAFIQwmBHRsfM\",\r\n  authDomain: \"crud-react-firebase-8f4ee.firebaseapp.com\",\r\n  databaseURL: \"https://crud-react-firebase-8f4ee.firebaseio.com\",\r\n  projectId: \"crud-react-firebase-8f4ee\",\r\n  storageBucket: \"crud-react-firebase-8f4ee.appspot.com\",\r\n  messagingSenderId: \"232074208526\",\r\n  appId: \"1:232074208526:web:5987846963050ccd03235f\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport { firebase };\r\n","import { firebase } from \"./firebase\";\r\n\r\nconst db = firebase.firestore();\r\nconst taskCollection = \"tareas\";\r\nconst userCollection = \"users\";\r\n\r\nfunction findAll() {\r\n  return db.collection(taskCollection).get();\r\n}\r\n\r\nfunction findByName(query) {\r\n  if (query) {\r\n    const taskRef = db.collection(taskCollection);\r\n    return taskRef\r\n      .orderBy(\"name\")\r\n      .where(\"name\", \">=\", query)\r\n      .where(\"name\", \"<=\", query + \"\\uf8ff\")\r\n      .get();\r\n  } else {\r\n    return db.collection(taskCollection).get();\r\n  }\r\n}\r\n\r\nfunction save(tarea) {\r\n  return db.collection(taskCollection).add(tarea);\r\n}\r\n\r\nfunction edit(tarea) {\r\n  return db.collection(taskCollection).doc(tarea.id).update(tarea);\r\n}\r\n\r\nfunction remove(id) {\r\n  return db.collection(taskCollection).doc(id).delete();\r\n}\r\n\r\nfunction saveUser(newUser) {\r\n  return db.collection(userCollection).add(newUser);\r\n}\r\n\r\nfunction findUser({ emailAddress, password }) {\r\n  const userRef = db.collection(userCollection);\r\n  return userRef\r\n    .where(\"emailAddress\", \"==\", emailAddress)\r\n    .where(\"password\", \"==\", password)\r\n    .get();\r\n}\r\n\r\nexport const taskServices = {\r\n  findByName,\r\n  findAll,\r\n  save,\r\n  edit,\r\n  remove,\r\n};\r\n\r\nexport const userServices = {\r\n  saveUser,\r\n  findUser,\r\n};\r\n","import { useContext } from \"react\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\n/**\r\n *\r\n */\r\n\r\nexport const useGlobal = () => useContext(GlobalContext);\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../contexts\";\r\n\r\n/**\r\n *\r\n */\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import { useContext } from \"react\";\r\nimport { NotificationContext } from \"../contexts\";\r\n\r\n/**\r\n *  isOpen: (true|false)\r\n *  message: Add a message that you want to show on alert content\r\n *  severity: (info|success|warning|error)\r\n */\r\n\r\nexport const useNotification = () => useContext(NotificationContext);\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, setValues, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { userServices } from \"../api\";\r\nimport { useNotification } from \"../hooks\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { object, string } from \"yup\";\r\n\r\nconst formSchema = object().shape({\r\n  firstName: string()\r\n    .matches(\r\n      /^([^0-9_-]*)$/,\r\n      \"First name should be not contain numbers or special characters\"\r\n    )\r\n    .required(\"First name is a required field.\"),\r\n  lastName: string()\r\n    .matches(\r\n      /^([^0-9_-]*)$/,\r\n      \"Last name should be not contain numbers or special characters\"\r\n    )\r\n    .required(\"Last name is a requited field.\"),\r\n  emailAddress: string()\r\n    .required(\"Email is a required field.\")\r\n    .email(\"Invalid email\"),\r\n  password: string().required(\"Password is a required field.\"),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Register = () => {\r\n  const alert = useNotification();\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(formSchema),\r\n    defaultValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      emailAddress: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const onSave = (values) => {\r\n    userServices.saveUser(values).then(\r\n      (data) => {\r\n        alert({\r\n          isOpen: true,\r\n          message: \"User has been registered succesfully.\",\r\n          severity: \"success\",\r\n        });\r\n        reset();\r\n        history.replace(\"/login\");\r\n      },\r\n      (error) => {\r\n        alert({\r\n          isOpen: true,\r\n          message: \"Error adding new user.\",\r\n          severity: \"error\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          User Register\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit(onSave)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputRef={register}\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                error={!!errors.firstName}\r\n                helperText={errors?.firstName?.message}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputRef={register}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                error={!!errors.lastName}\r\n                helperText={errors?.lastName?.message}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                inputRef={register}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"emailAddress\"\r\n                label=\"Email Address\"\r\n                name=\"emailAddress\"\r\n                error={!!errors.emailAddress}\r\n                helperText={errors?.emailAddress?.message}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                inputRef={register}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                error={!!errors.password}\r\n                helperText={errors?.password?.message}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export const type = {\r\n  LOGIN: \"login\",\r\n  LOGOUT: \"logout\",\r\n};\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { userServices } from \"../api\";\r\nimport { useNotification, useAuth } from \"../hooks\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { object, string } from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { type } from \"../types/types\";\r\n\r\nconst formSchema = object().shape({\r\n  emailAddress: string().required(\"Enter user email.\").email(\"Invalid email\"),\r\n  password: string().required(\"Enter user password.\"),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = ({ history }) => {\r\n  const classes = useStyles();\r\n  const alert = useNotification();\r\n  const { dispatch } = useAuth();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(formSchema),\r\n    defaultValues: {\r\n      emailAddress: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const onLogin = (values) => {\r\n    userServices.findUser(values).then(\r\n      (query) => {\r\n        const { empty } = query;\r\n        if (empty) {\r\n          alert({\r\n            isOpen: true,\r\n            message: \"Incorrect username or password :(\",\r\n            severity: \"error\",\r\n          });\r\n        } else {\r\n          query.forEach((doc) => {\r\n            const id = doc.id;\r\n            const { emailAddress, firstName, lastName } = doc.data();\r\n            dispatch({\r\n              type: type.LOGIN,\r\n              payload: { id, emailAddress, firstName, lastName },\r\n            });\r\n            alert({\r\n              isOpen: true,\r\n              message: `Welcome ${firstName} ${lastName} :)`,\r\n              severity: \"success\",\r\n            });\r\n            history.replace(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        alert({\r\n          isOpen: true,\r\n          message: `${JSON.stringify(error)}`,\r\n          severity: \"error\",\r\n        });\r\n      }\r\n    );\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit(onLogin)}>\r\n          <TextField\r\n            inputRef={register}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"emailAddress\"\r\n            label=\"Username\"\r\n            name=\"emailAddress\"\r\n            error={!!errors.emailAddress}\r\n            helperText={errors?.emailAddress?.message}\r\n          />\r\n          <TextField\r\n            inputRef={register}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            error={!!errors.password}\r\n            helperText={errors?.password?.message}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/register\" component={RouterLink} variant=\"body2\">\r\n                {\"Don't have an account? Register\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"User: qwd@gmail.com | pass: qwd\"}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"Copyright © \"}\r\n        <Link color=\"inherit\" href=\"https://linkedin.com/in/arielduarte\">\r\n          Ariel Duarte\r\n        </Link>{\" \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useAuth } from \"../hooks\";\r\nimport { type } from \"../types/types\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: \"wrap\",\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const { auth } = useAuth();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const { user, dispatch } = useAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onLogon = () => {\r\n    history.replace(\"/login\");\r\n    dispatch({\r\n      type: type.LOGOUT,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      color=\"default\"\r\n      elevation={0}\r\n      className={classes.appBar}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.toolbarTitle}\r\n        >\r\n          Tasks Manager App{\" \"}\r\n          {auth && (\r\n            <small>{`User Logged: ${auth.firstName} ${auth.lastName}`}</small>\r\n          )}\r\n        </Typography>\r\n        <nav>\r\n          <Link\r\n            variant=\"button\"\r\n            color=\"textPrimary\"\r\n            to=\"/\"\r\n            component={RouterLink}\r\n            className={classes.link}\r\n          >\r\n            Home\r\n          </Link>\r\n        </nav>\r\n        <Button\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          className={classes.link}\r\n          endIcon={<AccountCircleIcon />}\r\n        >\r\n          {auth.emailAddress}\r\n        </Button>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={onLogon}>Logout</MenuItem>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  controlRight: {\r\n    display: \"flex\",\r\n  },\r\n  expand: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.info.dark,\r\n    color: theme.palette.getContrastText(theme.palette.error.main),\r\n  },\r\n  cardContentInprogress: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.warning.dark,\r\n    color: theme.palette.getContrastText(theme.palette.error.main),\r\n  },\r\n  cardContentDone: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.success.dark,\r\n    color: theme.palette.getContrastText(theme.palette.error.main),\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.getContrastText(theme.palette.error.main),\r\n    background: theme.palette.error.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.error.dark,\r\n    },\r\n  },\r\n  successButton: {\r\n    color: theme.palette.getContrastText(theme.palette.error.main),\r\n    background: theme.palette.success.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.light,\r\n    },\r\n  },\r\n  blueButton: {\r\n    color: theme.palette.getContrastText(theme.palette.info.main),\r\n    background: theme.palette.info.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.info.light,\r\n    },\r\n  },\r\n  warningButton: {\r\n    color: theme.palette.getContrastText(theme.palette.error.main),\r\n    background: theme.palette.warning.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.warning.light,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AlertDialog({\r\n  isOpen,\r\n  handleYes,\r\n  handleNo,\r\n  title,\r\n  content,\r\n}) {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={handleNo}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleNo} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction ModalForm({\r\n  isOpen,\r\n  handleClose,\r\n  children,\r\n  title,\r\n  onSubmit,\r\n  loading,\r\n  buttonLabel = \"Save Changes\",\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const onConfirm = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    onSubmit();\r\n  };\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={isOpen}\r\n    >\r\n      <form className={classes.form} noValidate onSubmit={onConfirm}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.paper}>{children}</div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus type=\"submit\" color=\"primary\" disabled={loading}>\r\n            {buttonLabel}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nModalForm.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ModalForm;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useNotification, useGlobal, useForm } from \"../hooks\";\r\nimport { taskServices } from \"../api\";\r\n\r\nimport ModalForm from \"../components/ModalForm\";\r\n\r\nconst initTarea = {\r\n  name: \"\",\r\n  status: \"\",\r\n};\r\n\r\nconst EditCard = ({ isOpen, handleClose, tareaEdit, setTareas }) => {\r\n  const [glbState] = useGlobal();\r\n  const alert = useNotification();\r\n  const statuses = glbState.taskStatuses;\r\n\r\n  const [tarea, setTarea, handleInputChange, reset] = useForm(initTarea);\r\n\r\n  useEffect(() => {\r\n    if (tareaEdit) {\r\n      setTarea(tareaEdit);\r\n    }\r\n  }, [tareaEdit]);\r\n\r\n  const showMessage = () => {\r\n    alert({\r\n      isOpen: true,\r\n      message: \"Card has been updated succesfully.\",\r\n      severity: \"success\",\r\n    });\r\n  };\r\n\r\n  const editTarea = () => {\r\n    taskServices.edit(tarea).then(\r\n      (data) => {\r\n        setTareas((tareasList) =>\r\n          tareasList.map((item) =>\r\n            item.id === tarea.id\r\n              ? { ...item, name: tarea.name, status: tarea.status }\r\n              : { ...item }\r\n          )\r\n        );\r\n        handleClose();\r\n        showMessage();\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalForm\r\n        isOpen={isOpen}\r\n        title={\"Edit Task\"}\r\n        handleClose={handleClose}\r\n        onSubmit={editTarea}\r\n        loading={false}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Task Name\"\r\n              onChange={handleInputChange}\r\n              value={tarea.name}\r\n              autoFocus\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <InputLabel id=\"status-label-id\">Status</InputLabel>\r\n            <Select\r\n              name=\"status\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              labelId=\"status-label-id\"\r\n              id=\"status-label-id\"\r\n              onChange={handleInputChange}\r\n              value={tarea.status}\r\n              label=\"Status\"\r\n            >\r\n              {statuses.map((item) => (\r\n                <MenuItem key={item.value} value={item.value}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </ModalForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCard;\r\n","import React, { useContext, useState } from \"react\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n  CardActions,\r\n  CardContent,\r\n  Chip,\r\n  Typography,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useStyles from \"../UITemplate\";\r\nimport AlertDialog from \"../components/AlertDialog\";\r\nimport { taskServices } from \"../api\";\r\nimport EditCard from \"./EditCard\";\r\nimport { useNotification, useForm } from \"../hooks\";\r\n\r\nconst CardItem = ({ tarea, setTareas, tareas }) => {\r\n  const [tareId, setTareaId] = useState(\"\");\r\n  const [glbState] = useContext(GlobalContext);\r\n  const statuses = glbState.taskStatuses;\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n  const classes = useStyles();\r\n  const alert = useNotification();\r\n\r\n  const handleOpenDeleteDialog = (id) => {\r\n    setOpenConfirm(true);\r\n    setTareaId(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenConfirm(false);\r\n  };\r\n\r\n  const borrarTarea = () => {\r\n    taskServices.remove(tareId).then(\r\n      (data) => {\r\n        alert({\r\n          isOpen: true,\r\n          message: \"Card has been deleted succesfully.\",\r\n          severity: \"success\",\r\n        });\r\n        setTareas(tareas.filter((item) => item.id !== tareId));\r\n        handleClose();\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    borrarTarea();\r\n  };\r\n\r\n  const openEditModal = (tarea) => {\r\n    setShowEdit(true);\r\n    setSelected(tarea);\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    setShowEdit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardContent\r\n        className={\r\n          tarea.status === \"DONE\"\r\n            ? classes.cardContentDone\r\n            : tarea.status === \"INPROGRESS\"\r\n            ? classes.cardContentInprogress\r\n            : classes.cardContent\r\n        }\r\n      >\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          <Chip\r\n            label={statuses.find((item) => item.value === tarea.status).name}\r\n            variant=\"outlined\"\r\n            icon={<DoneIcon />}\r\n          />\r\n        </Typography>\r\n        <Typography>{tarea.name}</Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.controlRight}>\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton\r\n            onClick={() => openEditModal(tarea)}\r\n            aria-label=\"edit\"\r\n            className={classes.expand}\r\n          >\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton\r\n            onClick={() => handleOpenDeleteDialog(tarea.id)}\r\n            aria-label=\"delete\"\r\n            className={classes.expand}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </CardActions>\r\n\r\n      <EditCard\r\n        isOpen={showEdit}\r\n        handleClose={handleCloseEditModal}\r\n        tareaEdit={selected}\r\n        setTareas={setTareas}\r\n      />\r\n\r\n      <AlertDialog\r\n        isOpen={openConfirm}\r\n        handleNo={handleClose}\r\n        handleYes={handleDelete}\r\n        title={\"Delete Task\"}\r\n        content={\"Are you sure you want to delete?\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Card, Grid } from \"@material-ui/core\";\r\nimport useStyles from \"../UITemplate\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst CardsGrid = ({ tareas, setTareas }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.cardGrid} maxWidth=\"md\">\r\n      <Grid container spacing={4}>\r\n        {tareas.map((item) => (\r\n          <Grid item key={item.id} xs={12} sm={6} md={4}>\r\n            <Card className={classes.card}>\r\n              <CardItem tareas={tareas} tarea={item} setTareas={setTareas} />\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCardsGrid.defaultProps = {\r\n  tareas: [],\r\n};\r\n\r\nCardsGrid.propTypes = {\r\n  tareas: PropTypes.array.isRequired,\r\n  setTareas: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CardsGrid;\r\n","import React from \"react\";\r\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport useStyles from \"../UITemplate\";\r\n\r\nexport default function Icon({ name }) {\r\n  const { icon } = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {name === \"Home\" && <HomeIcon className={icon} />}\r\n      {name === \"Add\" && <AddToPhotosIcon className={icon} />}\r\n      {name === \"Delete\" && <DeleteIcon className={icon} />}\r\n      {name === \"Info\" && <InfoIcon className={icon} />}\r\n      {name === \"Check\" && <CheckIcon className={icon} />}\r\n      {name === \"Close\" && <CloseIcon className={icon} />}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { taskServices } from \"../api\";\r\nimport Icon from \"../components/Icon\";\r\nimport ModalForm from \"../components/ModalForm\";\r\nimport { useNotification, useForm, useGlobal } from \"../hooks\";\r\nimport useStyles from \"../UITemplate\";\r\n\r\nconst initTarea = {\r\n  name: \"\",\r\n  status: \"TODO\",\r\n};\r\n\r\nconst AddCard = ({ setTareas }) => {\r\n  const alert = useNotification();\r\n  const classes = useStyles();\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const [tarea, setTarea, handleInputChange, reset] = useForm(initTarea);\r\n  const [glbState] = useGlobal();\r\n  const statuses = glbState.taskStatuses;\r\n  const history = useHistory();\r\n\r\n  const handleClose = () => {\r\n    reset();\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const goToCreateTestCase = () => {\r\n    history.replace(\"/testCase\");\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (tarea.name.trim().length > 3) {\r\n      taskServices.save(tarea).then(\r\n        (data) => {\r\n          setTareas((tareasList) => [{ id: data.id, ...tarea }, ...tareasList]);\r\n          alert({\r\n            isOpen: true,\r\n            message: \"Card has been added succesfully.\",\r\n            severity: \"success\",\r\n          });\r\n          reset();\r\n          setOpenModal(false);\r\n        },\r\n        (error) => {\r\n          alert({\r\n            isOpen: true,\r\n            message: \"Error adding new card.\",\r\n            severity: \"error\",\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      alert({\r\n        isOpen: true,\r\n        severity: \"error\",\r\n        message: \"Task name is required.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.heroButtons}>\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={goToCreateTestCase}\r\n              // onClick={() => setOpenModal(!openModal)}\r\n            >\r\n              <Icon name={\"Add\"} />\r\n              Create New Task\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <ModalForm\r\n        isOpen={openModal}\r\n        title={\"Create New Task\"}\r\n        handleClose={handleClose}\r\n        onSubmit={handleSubmit}\r\n        loading={false}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Task Name\"\r\n              onChange={handleInputChange}\r\n              value={tarea.name}\r\n              autoFocus\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <InputLabel id=\"status-label-id\">Status</InputLabel>\r\n            <Select\r\n              name=\"status\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              labelId=\"status-label-id\"\r\n              id=\"status-label-id\"\r\n              onChange={handleInputChange}\r\n              value={tarea.status}\r\n              label=\"Status\"\r\n            >\r\n              {statuses.map((item) => (\r\n                <MenuItem key={item.value} value={item.value}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </ModalForm>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCard.prototype = {\r\n  setTareas: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCard;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function Loader({ color = \"secondary\" }) {\r\n  return <CircularProgress color={color} disableShrink />;\r\n}\r\n","export const types = {\r\n  FETCH_TASKS_REQUEST: \"FETCH_TASKS_REQUEST\",\r\n  FETCH_TASKS_SUCCESS: \"FETCH_TASKS_SUCCESS\",\r\n  FETCH_TASKS_ERROR: \"FETCH_TASKS_ERROR\",\r\n};\r\n","import { taskServices } from \"../../api\";\r\nimport { types } from \"../types/actionTypes\";\r\n\r\nexport function searchTasks(searchTerm) {\r\n  return (dispatch) => {\r\n    dispatch(fetchTasks(searchTerm));\r\n    taskServices.findByName(searchTerm).then(\r\n      (data) => {\r\n        const arrayData = data.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        dispatch(fetchTasksSuccess(arrayData));\r\n      },\r\n      (error) => {\r\n        dispatch(fetchTasksError(error));\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport function fetchTasks(searchTerm) {\r\n  return {\r\n    type: types.FETCH_TASKS_REQUEST,\r\n    payload: {\r\n      searchTerm,\r\n    },\r\n  };\r\n}\r\n\r\nexport function fetchTasksSuccess(tasks) {\r\n  return {\r\n    type: types.FETCH_TASKS_SUCCESS,\r\n    payload: {\r\n      tasks,\r\n    },\r\n  };\r\n}\r\n\r\nexport function fetchTasksError(errors) {\r\n  return {\r\n    type: types.FETCH_TASKS_ERROR,\r\n    payload: {\r\n      errors,\r\n    },\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n\r\nimport { searchTasks } from \"../redux/actions/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const _loading = useSelector(({ search }) => search.loading);\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    searchTerm: \"\",\r\n    loading: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    dispatch(searchTasks(values.searchTerm));\r\n  };\r\n\r\n  const handleMouseDownSearch = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, loading: _loading });\r\n  }, [_loading]);\r\n\r\n  useEffect(() => {\r\n    dispatch(searchTasks(values.searchTerm));\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" justify=\"center\">\r\n      <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"search-tasks\">Search tasks by name</InputLabel>\r\n        <OutlinedInput\r\n          id=\"search-tasks\"\r\n          value={values.searchTerm}\r\n          onChange={handleChange(\"searchTerm\")}\r\n          disabled={values.loading}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                disabled={values.loading}\r\n                aria-label=\"search\"\r\n                onClick={handleSearch}\r\n                onMouseDown={handleMouseDownSearch}\r\n                edge=\"end\"\r\n              >\r\n                {values.loading ? <BlockIcon /> : <SearchIcon />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          labelWidth={160}\r\n        />\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport useStyles from \"../UITemplate\";\r\nimport CardsGrid from \"./CardsGrid\";\r\nimport AddCard from \"./AddCard\";\r\nimport Loader from \"../components/Loader\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction Home() {\r\n  const { tasks, loading, errors } = useSelector(({ search }) => search);\r\n  const classes = useStyles();\r\n  const [tareas, setTareas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTareas(tasks);\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <main>\r\n      <div className={classes.heroContent}>\r\n        <Container maxWidth=\"lg\">\r\n          <AddCard setTareas={setTareas} />\r\n          <SearchBar />\r\n        </Container>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        {loading && <Loader color={\"primary\"} />}\r\n      </Grid>\r\n      {tareas && <CardsGrid tareas={tareas} setTareas={setTareas} />}\r\n    </main>\r\n  );\r\n}\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { object, string, number } from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport Icon from \"../components/Icon\";\r\nimport ModalForm from \"../components/ModalForm\";\r\nimport { useNotification } from \"../hooks\";\r\nimport useStyles from \"../UITemplate\";\r\n\r\nconst formSchema = object().shape({\r\n  stepNumber: number(),\r\n  action: string().required(\"Action is a required field.\"),\r\n  requiredData: string().required(\"Required Data is a required field.\"),\r\n  expectedResult: string().required(\"Expected Result is a required field.\"),\r\n});\r\n\r\nconst defaultValues = {\r\n  stepNumber: 0,\r\n  action: \"\",\r\n  requiredData: \"\",\r\n  expectedResult: \"\",\r\n};\r\nconst AddStepModal = ({ setSteps, steps }) => {\r\n  const alert = useNotification();\r\n  const classes = useStyles();\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset, setValue } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(formSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const handleAddNewStep = () => {\r\n    setOpenModal(!openModal);\r\n\r\n    reset({\r\n      ...defaultValues,\r\n      stepNumber: steps.length + 1,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    reset();\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onSubmit = (step) => {\r\n    const values = { ...step, stepNumber: steps.length + 1 };\r\n    setSteps((items) => [{ ...values }, ...items]);\r\n    alert({\r\n      isOpen: true,\r\n      message: \"Step has been added succesfully.\",\r\n      severity: \"success\",\r\n    });\r\n    reset();\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.heroButtons}>\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleAddNewStep()}\r\n            >\r\n              <Icon name={\"Add\"} />\r\n              Add New Step\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <ModalForm\r\n        isOpen={openModal}\r\n        title={\"Add New Step\"}\r\n        handleClose={handleClose}\r\n        loading={false}\r\n        buttonLabel={\"Add Step\"}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              inputRef={register}\r\n              disabled={true}\r\n              name=\"stepNumber\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Step #\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              inputRef={register}\r\n              name=\"action\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Action\"\r\n              error={!!errors.action}\r\n              helperText={errors?.action?.message}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              inputRef={register}\r\n              name=\"requiredData\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Required Data\"\r\n              error={!!errors.requiredData}\r\n              helperText={errors?.requiredData?.message}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              inputRef={register}\r\n              name=\"expectedResult\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Expected Result\"\r\n              error={!!errors.expectedResult}\r\n              helperText={errors?.expectedResult?.message}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </ModalForm>\r\n    </>\r\n  );\r\n};\r\n\r\nAddStepModal.prototype = {\r\n  setSteps: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddStepModal;\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport { last } from \"lodash\";\r\nimport { Container, TableCell } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AlertDialog from \"../components/AlertDialog\";\r\nimport { Grid, Button, TextField, MenuItem } from \"@material-ui/core\";\r\nimport AddStepModal from \"./AddStepModal\";\r\nimport { object, string } from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Icon from \"../components/Icon\";\r\nimport { useNotification, useGlobal } from \"../hooks\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport { TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  formContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst scopes = [\r\n  { name: \"COMPONENTS\", value: \"COMPONENTS\" },\r\n  { name: \"FEATURE\", value: \"FEATURE\" },\r\n];\r\n\r\nconst formSchema = object().shape({\r\n  testCaseId: string().required(\"Test case Id is a required field.\"),\r\n  status: string().required(\"Status is a required field.\"),\r\n  title: string().required(\"Title is a required field.\"),\r\n  description: string().required(\"Description is a required field.\"),\r\n});\r\n\r\nconst TestTemplateForm = () => {\r\n  const [glbState] = useGlobal();\r\n  const statuses = glbState.taskStatuses;\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const history = useHistory();\r\n  const alert = useNotification();\r\n  const { register, handleSubmit, errors, reset, control } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(formSchema),\r\n    defaultValues: {\r\n      testCaseId: \"\",\r\n      status: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n    },\r\n  });\r\n\r\n  const onSave = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const onConfirmCancel = () => {\r\n    setOpenConfirm(true);\r\n  };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const [steps, setSteps] = useState([]);\r\n  const onSaveStep = (step) => {\r\n    setSteps([...steps, step]);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <main>\r\n      <div className={classes.formContent}>\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Create Test Case\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit(onSave)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  name=\"testCaseId\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"testCaseId\"\r\n                  label=\"Test case Id\"\r\n                  error={!!errors.testCaseId}\r\n                  helperText={errors?.testCaseId?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller\r\n                  render={(props) => (\r\n                    <TextField\r\n                      select\r\n                      value={props.value}\r\n                      onChange={props.onChange}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      label=\"Status\"\r\n                      error={!!errors.status}\r\n                      helperText={errors?.status?.message}\r\n                    >\r\n                      {statuses.map((item) => (\r\n                        <MenuItem key={item.value} value={item.value}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                  name=\"status\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  rules={{\r\n                    required: \"Choose one status.\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  name=\"title\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"title\"\r\n                  label=\"Test title\"\r\n                  error={!!errors.title}\r\n                  helperText={errors?.title?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  name=\"priority\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"priority\"\r\n                  label=\"Test priority\"\r\n                  error={!!errors.testCaseId}\r\n                  helperText={errors?.testCaseId?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  name=\"createdBy\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"createdBy\"\r\n                  label=\"Created by\"\r\n                  error={!!errors.testCaseId}\r\n                  helperText={errors?.testCaseId?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  name=\"project\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"project\"\r\n                  label=\"Project\"\r\n                  error={!!errors.testCaseId}\r\n                  helperText={errors?.testCaseId?.message}\r\n                />\r\n              </Grid>\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <KeyboardDatePicker\r\n                    // disableToolbar\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    views={[\"year\", \"month\", \"date\"]}\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"creationDate\"\r\n                    label=\"Creation Date\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller\r\n                  render={(props) => (\r\n                    <TextField\r\n                      select\r\n                      value={props.value}\r\n                      onChange={props.onChange}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      label=\"Scopes\"\r\n                      error={!!errors.status}\r\n                      helperText={errors?.status?.message}\r\n                    >\r\n                      {scopes.map((item) => (\r\n                        <MenuItem key={item.value} value={item.value}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                  name=\"scopes\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  rules={{\r\n                    required: \"Choose one scope\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  name=\"modifiedBy\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"modifiedBy\"\r\n                  label=\"Last modified by\"\r\n                  error={!!errors.testCaseId}\r\n                  helperText={errors?.testCaseId?.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  name=\"labels\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"labels\"\r\n                  label=\"Labels\"\r\n                  error={!!errors.testCaseId}\r\n                  helperText={errors?.testCaseId?.message}\r\n                />\r\n              </Grid>\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <KeyboardDatePicker\r\n                    // disableToolbar\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    views={[\"year\", \"month\", \"date\"]}\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"modifyDate\"\r\n                    label=\"Last modification date\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  variant=\"outlined\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  fullWidth\r\n                  label=\"Multiline Placeholder\"\r\n                  placeholder=\"Description\"\r\n                  multiline\r\n                  label=\"Description\"\r\n                  error={!!errors.description}\r\n                  helperText={errors?.description?.message}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  variant=\"outlined\"\r\n                  id=\"preCondition\"\r\n                  name=\"preCondition\"\r\n                  fullWidth\r\n                  label=\"Multiline Placeholder\"\r\n                  placeholder=\"Pre-Condition\"\r\n                  multiline\r\n                  label=\"Pre-Condition\"\r\n                  error={!!errors.description}\r\n                  helperText={errors?.description?.message}\r\n                />\r\n              </Grid>\r\n\r\n              <AddStepModal setSteps={setSteps} steps={steps}></AddStepModal>\r\n              <Grid item xs={12} sm={12}>\r\n                {steps.length > 0 && (\r\n                  <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Step #</TableCell>\r\n                          <TableCell>Actions</TableCell>\r\n                          <TableCell>Required Data</TableCell>\r\n                          <TableCell>Expected Result</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      {steps.map((elemento) => (\r\n                        <TableRow key={elemento.stepNumber}>\r\n                          <TableCell>{elemento.stepNumber}</TableCell>\r\n                          <TableCell>{elemento.action}</TableCell>\r\n                          <TableCell>{elemento.requiredData}</TableCell>\r\n                          <TableCell>{elemento.expectedResult}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </Table>\r\n                  </TableContainer>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  variant=\"outlined\"\r\n                  id=\"postCondition\"\r\n                  name=\"postCondition\"\r\n                  fullWidth\r\n                  label=\"Multiline Placeholder\"\r\n                  placeholder=\"Post-Condition\"\r\n                  multiline\r\n                  label=\"Post-Condition\"\r\n                  error={!!errors.description}\r\n                  helperText={errors?.description?.message}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  inputRef={register}\r\n                  variant=\"outlined\"\r\n                  id=\"testSet\"\r\n                  name=\"testSet\"\r\n                  fullWidth\r\n                  label=\"Multiline Placeholder\"\r\n                  placeholder=\"Test set\"\r\n                  multiline\r\n                  label=\"Test set\"\r\n                  error={!!errors.description}\r\n                  helperText={errors?.description?.message}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.submit}\r\n              onClick={onConfirmCancel}\r\n            >\r\n              <Icon name={\"Close\"} />\r\n              Cancel\r\n            </Button>{\" \"}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              <Icon name={\"Check\"} />\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n      <AlertDialog\r\n        isOpen={openConfirm}\r\n        handleNo={() => setOpenConfirm(false)}\r\n        handleYes={onCancel}\r\n        title={\"Confirm Cancel\"}\r\n        content={\"Are you sure you want to cancel?\"}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TestTemplateForm;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Home from \"../pages/Home\";\r\nimport TestTemplateForm from \"../pages/TestTemplateForm\";\r\n\r\nconst DashboardRouter = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/testCase\" component={TestTemplateForm} />\r\n        <Redirect to=\"/home\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardRouter;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Register from \"../pages/Register\";\r\nimport Login from \"../pages/Login\";\r\nimport DashboardRouter from \"./DashboardRouter\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nimport { useAuth } from \"../hooks\";\r\n\r\nconst AppRouter = () => {\r\n  const { auth } = useAuth();\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path=\"/login\"\r\n            component={Login}\r\n            isAuthenticated={auth.logged}\r\n          />\r\n          <PublicRoute\r\n            exact\r\n            path=\"/register\"\r\n            component={Register}\r\n            isAuthenticated={auth.logged}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/testCase\"\r\n            component={DashboardRouter}\r\n            isAuthenticated={auth.logged}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/\"\r\n            component={DashboardRouter}\r\n            isAuthenticated={auth.logged}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { NotificationProvider } from \"./contexts\";\r\nimport AppRouter from \"./router/AppRouter\";\r\n\r\nfunction App() {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: \"#4791db\",\r\n        main: \"#1976d2\",\r\n        dark: \"#115293\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <NotificationProvider>\r\n          <AppRouter />\r\n        </NotificationProvider>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { type } from \"../types/types\";\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case type.LOGIN:\r\n      return {\r\n        logged: true,\r\n        ...action.payload,\r\n      };\r\n\r\n    case type.LOGOUT:\r\n      return {\r\n        logged: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport { authReducer } from \"../auth/authReducer\";\r\nimport { GlobalContext, AuthContext } from \"../contexts\";\r\n\r\nconst INITIAL_GLOBAL_STATE = {\r\n  taskStatuses: [\r\n    { name: \"TODO\", value: \"TODO\" },\r\n    { name: \"IN PROGRESS\", value: \"INPROGRESS\" },\r\n    { name: \"DONE\", value: \"DONE\" },\r\n  ],\r\n};\r\n\r\nconst initReducer = () => {\r\n  return JSON.parse(localStorage.getItem(\"userTaskApp\")) || { logged: false };\r\n};\r\n\r\nconst Store = ({ children }) => {\r\n  const [glbState, setGlbState] = useState(INITIAL_GLOBAL_STATE);\r\n  const [auth, dispatch] = useReducer(authReducer, {}, initReducer);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"userTaskApp\", JSON.stringify(auth));\r\n  }, [auth]);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={[glbState, setGlbState]}>\r\n      <AuthContext.Provider value={{ auth, dispatch }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","import { types } from \"../types/actionTypes\";\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  searchTerm: \"\",\r\n  loading: false,\r\n  errors: null,\r\n};\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_TASKS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        searchTerm: action.payload.searchTerm,\r\n        errors: null,\r\n      };\r\n    case types.FETCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tasks: action.payload.tasks,\r\n      };\r\n    case types.FETCH_TASKS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tasks: [],\r\n        errors: action.payload.errors,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport searchReducer from \"./searchReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  search: searchReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst reduxStore = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default reduxStore;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport Store from \"./store\";\r\nimport reduxStore from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={reduxStore}>\r\n    <Store>\r\n      <App />\r\n    </Store>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}